package ec.edu.espe.medicbyte.view;

import ec.edu.espe.medicbyte.common.core.View;
import ec.edu.espe.medicbyte.model.Speciality;
import java.awt.Color;
import java.time.LocalDate;
import java.util.List;
import javax.swing.JButton;
import jiconfont.icons.font_awesome.FontAwesome;
import jiconfont.swing.IconFontSwing;

/**
 *
 * @author Andres Jonathan J.
 */
public class FrmRequestAppointment extends View {
    public static enum StatusMessage { SUCCESS, ERROR }
    private boolean requestingAppointment = false;
    
    private List<Speciality> specialities;
    /**
     * Creates new form FrmRequestAppointment
     */
    public FrmRequestAppointment() {
        initComponents();
        
        lblStatusMessage.setVisible(false);
        lblSpecialtyError.setVisible(false);
        lblDateError.setVisible(false);
        
        datepkrAppointmentDate.getSettings().setFormatForDatesCommonEra("dd-MM-yyyy");
        datepkrAppointmentDate.getSettings().setFormatForDatesBeforeCommonEra("dd-MM-yyyy");
        datepkrAppointmentDate.getSettings()
            .setDateRangeLimits(LocalDate.now(), LocalDate.MAX);
        
        JButton datePickerButton = datepkrAppointmentDate.getComponentToggleCalendarButton();
        datePickerButton.setIcon(IconFontSwing.buildIcon(FontAwesome.CALENDAR, 18, new Color(71, 71, 71)));
        
        listen("showStatusMessage", (args) -> showStatusMessage(args.get(0), args.get(1)));
        listen("hideStatusMessage", (args) -> {
            lblStatusMessage.setVisible(false);
            repaint();
        });
        listen("success", (args) -> {
            txaDescription.setText("");
            datepkrAppointmentDate.clear();
        });
        
        listen("submitComplete", (args) -> {
            requestingAppointment = false;
        });
    }
    
    @Override
    protected void onChange(String name, Object oldValue, Object newValue) {
        if (name.equals("specialities")) {
            specialities = (List<Speciality>) newValue;
            cmbSpeciality.removeAllItems();
            specialities.forEach(speciality -> cmbSpeciality.addItem(speciality.getName()));
        }
    }
    
    @Override
    protected void onEnter() {}
    
    @Override
    protected void onLeave() {
        lblStatusMessage.setVisible(false);
        btnRequestAppointment.setEnabled(true);
    }
    
    private void showStatusMessage(StatusMessage status, String message) {
        lblStatusMessage.setVisible(true);
        lblStatusMessage.setText(message);
        
        switch (status) {
            case SUCCESS:
                lblStatusMessage.setBackground(new Color(152, 250, 224));
                lblStatusMessage.setForeground(new Color(13, 166, 127));
            break;
            case ERROR:
                lblStatusMessage.setBackground(new Color(255, 161, 161));
                lblStatusMessage.setForeground(new Color(227, 59, 60));
            break;
        }
        
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lblStatusMessage = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbSpeciality = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        datepkrAppointmentDate = new com.github.lgooddatepicker.components.DatePicker();
        btnRequestAppointment = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaDescription = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaDescription1 = new javax.swing.JTextArea();
        lblSpecialtyError = new javax.swing.JLabel();
        lblDateError = new javax.swing.JLabel();

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));

        jLabel1.setText("Request new appointment");
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        jPanel2.add(jLabel1);
        jPanel2.add(jSeparator2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 282;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        add(jPanel2, gridBagConstraints);

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));

        jPanel3.setOpaque(false);

        lblStatusMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStatusMessage.setOpaque(true);

        jLabel2.setText("*Specialty:");
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jLabel3.setText("*Date:");
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btnRequestAppointment.setText("Request appointment");
        btnRequestAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestAppointmentActionPerformed(evt);
            }
        });

        jLabel4.setText("Description:");
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txaDescription.setColumns(20);
        txaDescription.setRows(5);
        jScrollPane1.setViewportView(txaDescription);

        txaDescription1.setColumns(20);
        txaDescription1.setRows(5);
        jScrollPane2.setViewportView(txaDescription1);

        lblSpecialtyError.setText("error");
        lblSpecialtyError.setForeground(new java.awt.Color(240, 84, 84));

        lblDateError.setText("error");
        lblDateError.setForeground(new java.awt.Color(240, 84, 84));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSpecialtyError, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDateError, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cmbSpeciality, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(datepkrAppointmentDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                    .addComponent(btnRequestAppointment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(lblStatusMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(lblStatusMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbSpeciality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSpecialtyError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datepkrAppointmentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDateError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(btnRequestAppointment)
                .addContainerGap())
        );

        jPanel1.add(jPanel3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 6, 25, 0);
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRequestAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestAppointmentActionPerformed
        Speciality speciality;
        LocalDate date;
        String description = "";
        
        if (requestingAppointment) {
            return;
        }
        
        speciality = specialities.stream().filter(s -> {
            return s.getName().equals((String) cmbSpeciality.getSelectedItem());
        }).map(s -> {
            for (Speciality item : specialities) {
                if (item.getName().equals(s.getName())) {
                    return item;
                }
            }
            
            return null;
        }).findFirst().orElse(null);
        
        if (datepkrAppointmentDate.getText().trim().isEmpty()) {
            lblDateError.setVisible(true);
            lblDateError.setText("this field is required");
            return;
        }
        
        requestingAppointment = true;
        btnRequestAppointment.setEnabled(false);
        date = datepkrAppointmentDate.getDate();
        
        if (!txaDescription.getText().trim().isEmpty()) {
            description = txaDescription.getText();
        }
        
        emit("submit", speciality, date, description);
        
        lblSpecialtyError.setVisible(false);
        lblDateError.setVisible(false);
    }//GEN-LAST:event_btnRequestAppointmentActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRequestAppointment;
    private javax.swing.JComboBox<String> cmbSpeciality;
    private com.github.lgooddatepicker.components.DatePicker datepkrAppointmentDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblDateError;
    private javax.swing.JLabel lblSpecialtyError;
    private javax.swing.JLabel lblStatusMessage;
    private javax.swing.JTextArea txaDescription;
    private javax.swing.JTextArea txaDescription1;
    // End of variables declaration//GEN-END:variables
}
