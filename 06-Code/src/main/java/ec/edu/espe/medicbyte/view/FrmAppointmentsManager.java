package ec.edu.espe.medicbyte.view;

import ec.edu.espe.medicbyte.common.core.View;
import ec.edu.espe.medicbyte.model.Appointment;
import ec.edu.espe.medicbyte.model.Location;
import ec.edu.espe.medicbyte.model.Medic;
import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;

/**
 *
 * @author Andres Jonathan J.
 */
public class FrmAppointmentsManager extends View {
    private List<Medic> medics;
    private List<Location> locations;

    /**
     * Creates new form FrmAppointmentsManager
     */
    public FrmAppointmentsManager() {
        initComponents();
        appointmentsScrollPanel.getVerticalScrollBar().setUnitIncrement(16);
        appointmentsScrollPanel.getViewport().setOpaque(false);
        btnRescheduledRequests.setVisible(false);
        
        listen("updatedAppointment", (args) -> {
            JOptionPane.showMessageDialog(
                getRootPane(),
                "Appointment succesfully updated!",
                "Updated",
                JOptionPane.INFORMATION_MESSAGE
            );
        });
    }
    
    @Override
    protected void onChange(String name, Object oldValue, Object newValue) {
        if (name.equals("medics")) {
            medics = (List<Medic>)newValue;
        }
        
        if (name.equals("locations")) {
            locations = (List<Location>)newValue;
        }
        
        if (name.equals("requestedAppointments")) {
            List<Appointment> appointments = (List<Appointment>) newValue;
            appointments.sort(Comparator.comparingInt(Appointment::getId).reversed());
            appointmentsContainer.removeAll();
            appointments.forEach(appointment -> {
                List<Medic> specializedMedics = medics.stream()
                    .filter(medic -> medic.getSpeciality().getId() == appointment.getSpeciality().getId())
                    .collect(Collectors.toList());
                RequestedAppointmentItem item = new RequestedAppointmentItem(appointment, specializedMedics, locations);
                item.onApprove((context) -> emit("approvedAppointment", appointment, context));
                item.onReject(() -> emit("rejectedAppointment", appointment));
                appointmentsContainer.add(item);
            });
            
            if (appointments.isEmpty()) {
                appointmentsContainer.add(pnlEmptyRecords);
            }
            
            repaint();
            revalidate();
        }
    }

    @Override
    protected void onLeave() {}

    @Override
    protected void onEnter() {}

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlEmptyRecords = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnPendentForApproval = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(8, 5), new java.awt.Dimension(8, 5), new java.awt.Dimension(8, 5));
        btnRescheduledRequests = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        appointmentsWrapperPanel = new javax.swing.JPanel();
        appointmentsScrollPanel = new javax.swing.JScrollPane();
        appointmentsContainer = new javax.swing.JPanel();
        paginationPanel = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        pnlEmptyRecords.setOpaque(false);
        pnlEmptyRecords.setLayout(new java.awt.BorderLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("No records found");
        pnlEmptyRecords.add(jLabel2, java.awt.BorderLayout.CENTER);

        setPreferredSize(new java.awt.Dimension(600, 454));

        jPanel5.setOpaque(false);
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel7.setOpaque(false);
        jPanel7.setLayout(new javax.swing.BoxLayout(jPanel7, javax.swing.BoxLayout.Y_AXIS));

        jPanel2.setOpaque(false);

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        btnPendentForApproval.setText("Pendent for approval");
        btnPendentForApproval.setBackground(new java.awt.Color(75, 101, 132));
        btnPendentForApproval.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 12, 6, 12));
        btnPendentForApproval.setBorderPainted(false);
        btnPendentForApproval.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPendentForApproval.setFocusPainted(false);
        btnPendentForApproval.setFocusable(false);
        btnPendentForApproval.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnPendentForApproval.setForeground(new java.awt.Color(255, 255, 255));
        btnPendentForApproval.setOpaque(true);
        jPanel1.add(btnPendentForApproval);
        jPanel1.add(filler1);

        btnRescheduledRequests.setText("Reschedule requests");
        btnRescheduledRequests.setBackground(new java.awt.Color(215, 221, 228));
        btnRescheduledRequests.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 12, 6, 12));
        btnRescheduledRequests.setBorderPainted(false);
        btnRescheduledRequests.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRescheduledRequests.setFocusPainted(false);
        btnRescheduledRequests.setFocusable(false);
        btnRescheduledRequests.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRescheduledRequests.setForeground(new java.awt.Color(75, 101, 133));
        btnRescheduledRequests.setOpaque(true);
        jPanel1.add(btnRescheduledRequests);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        jPanel7.add(jPanel2);

        appointmentsWrapperPanel.setBackground(new java.awt.Color(204, 204, 255));
        appointmentsWrapperPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        appointmentsWrapperPanel.setOpaque(false);
        appointmentsWrapperPanel.setLayout(new java.awt.BorderLayout());

        appointmentsScrollPanel.setBackground(new java.awt.Color(204, 204, 255));
        appointmentsScrollPanel.setBorder(null);
        appointmentsScrollPanel.setOpaque(false);

        appointmentsContainer.setBackground(new java.awt.Color(204, 204, 255));
        appointmentsContainer.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 8));
        appointmentsContainer.setOpaque(false);
        appointmentsContainer.setLayout(new javax.swing.BoxLayout(appointmentsContainer, javax.swing.BoxLayout.Y_AXIS));
        appointmentsScrollPanel.setViewportView(appointmentsContainer);

        appointmentsWrapperPanel.add(appointmentsScrollPanel, java.awt.BorderLayout.CENTER);

        jPanel7.add(appointmentsWrapperPanel);

        paginationPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        paginationPanel.setMaximumSize(new java.awt.Dimension(2147483647, 28));
        paginationPanel.setOpaque(false);
        paginationPanel.setLayout(new java.awt.BorderLayout());

        jLabel15.setText("1");
        paginationPanel.add(jLabel15, java.awt.BorderLayout.CENTER);

        jLabel16.setText("Page:");
        jLabel16.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 5));
        paginationPanel.add(jLabel16, java.awt.BorderLayout.LINE_START);

        jPanel7.add(paginationPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jPanel7, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        jLabel1.setText("Manage appointments");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel appointmentsContainer;
    private javax.swing.JScrollPane appointmentsScrollPanel;
    private javax.swing.JPanel appointmentsWrapperPanel;
    private javax.swing.JButton btnPendentForApproval;
    private javax.swing.JButton btnRescheduledRequests;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel paginationPanel;
    private javax.swing.JPanel pnlEmptyRecords;
    // End of variables declaration//GEN-END:variables
}
